@page "/Register"
@using BlazorApp6.Client.Services.AuthService
@using BlazorApp6.ViewModels
@using BlazorApp6.Shared.Models
@inject IAuthService AuthService
@inject ISessionStorageService SesStorage
@inject NavigationManager NavMeg
@inject UserViewModel _loginViewModel

<h3>@mess</h3>
<div class="col-12">
    <EditForm Model="_loginViewModel" OnValidSubmit="ItemSubmit">
        <DataAnnotationsValidator />
        <div>
            <label for="Username"> Username </label>
            <InputText id="Username" @bind-Value="_loginViewModel.Username" class="gtr-150"></InputText>
            <ValidationMessage For="@(() => _loginViewModel.Username)" />
        </div>
        <div>
            <label for="Login"> Login </label>
            <InputText id="name" @bind-Value="_loginViewModel.Userlogin" class="gtr-150"></InputText>
            <ValidationMessage For="@(() => _loginViewModel.Userlogin)" />
        </div>
        <div>
            <label for="Email"> Email </label>
            <InputText id="Email" @bind-Value="_loginViewModel.Email" class="gtr-150"></InputText>
            <ValidationMessage For="@(() => _loginViewModel.Email)" />
        </div>
        <div>
            <label for="Password"> Password </label>
            <InputText id="Password" @bind-Value="_loginViewModel.Password" class="gtr-150"></InputText>
            <ValidationMessage For="@(() => _loginViewModel.Password)" />
        </div>
        
        <button type="submit" class="button"> Login </button>

    </EditForm>
 
</div>

@code {
    

    private string mess="Please Register Yourself";

    async Task ItemSubmit()
    {

        _loginViewModel.SanitizeInput();
        RegUserDTO user = _loginViewModel;
        var ans = await AuthService.RegisterAsync(user);
        if (ans == "")
        {
            NavMeg.NavigateTo("/login");
        }
        else
        {
            mess = ans;
        }
        
    }
}
